// rest
* {
    box-sizing: border-box;
    outline: none;
}
html {
    font-size: 13px;
}
body {
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    line-height: 1.2em;
    background: #f1f1f1;
}
a {
    color: #999;
}

//color
$colors: (
    "primary": #db9e3f,
    "white": #fff,
    "light": #f9f9f9,
    "grey": #999,
    "drak-1": #343440,
    "drak": #222,
    "black": #000,
);
@each $colorKey, $color in $colors {
    text-#{$colorKey} {
        color: $color
    }
    bg-#{$colorKey} {
        background-color: $color;;
    }
};

// text
@each $var in (left, center, right) {
    .text-#{$var} {
        text-align: $var;
    }
}

// font-size
$base-font-size: 1rem;
$font-sizes: (
    xs: 0.7692, // 10px
    sm: 0.9231, // 12px
    md: 1, // 13px
    lg: 1.0769, // 14px
    xl: 1.2308 // 16px
);
@each $sizeKey,$size in $font-sizes {
    .fs-#{$sizeKey} {
        font-size: $base-font-size * $size;
    }
}


// flex
.d-flex {
    display: flex;
}
.flex-column {
    flex-direction: column;
}
$flex-jc: (
    start: flex-start,
    end: flex-end,
    center: center,
    between: space-between,
    around: space-around
);
// 主轴对齐方式
@each $key, $value in $flex-jc {
    .jc-#{$key} {
        justify-content: $value;
    }
}

$flex-ai: (
    start: flex-start,
    end: flex-end,
    center: center,
    stretch: stretch
);
// 交叉轴对齐方式
@each $key, $value in $flex-ai {
    .ai-#{key} {
        align-items: $value;
    }
};
.flex-1 {
    flex: 1;
}
.flex-grow-1 {
    flex-grow: 1;
}
